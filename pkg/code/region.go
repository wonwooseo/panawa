// Code generated by `go generate`; DO NOT EDIT.

package code

type RegionCodeResolver struct {
	codeToName map[string]string
	nameToCode map[string]string
}

func NewRegionCodeResolver() RegionCodeResolver {
	return RegionCodeResolver{
		codeToName: map[string]string{

			"0000": "서울",

			"0001": "부산",

			"0002": "대구",

			"0003": "인천",

			"0004": "광주",

			"0005": "대전",

			"0006": "울산",

			"0007": "세종",

			"0008": "수원",

			"0009": "성남",

			"0010": "고양",

			"0011": "용인",

			"0012": "춘천",

			"0013": "강릉",

			"0014": "청주",

			"0015": "천안",

			"0016": "전주",

			"0017": "순천",

			"0018": "포항",

			"0019": "안동",

			"0020": "창원",

			"0021": "김해",

			"0022": "제주",
		},
		nameToCode: map[string]string{

			"서울": "0000",

			"부산": "0001",

			"대구": "0002",

			"인천": "0003",

			"광주": "0004",

			"대전": "0005",

			"울산": "0006",

			"세종": "0007",

			"수원": "0008",

			"성남": "0009",

			"고양": "0010",

			"용인": "0011",

			"춘천": "0012",

			"강릉": "0013",

			"청주": "0014",

			"천안": "0015",

			"전주": "0016",

			"순천": "0017",

			"포항": "0018",

			"안동": "0019",

			"창원": "0020",

			"김해": "0021",

			"제주": "0022",
		},
	}
}

func (r RegionCodeResolver) SupportedCodes() map[string]string {
	return r.codeToName
}

func (r RegionCodeResolver) ResolveCode(c string) (string, bool) {
	localeName, ok := r.codeToName[c]
	return localeName, ok
}

func (r RegionCodeResolver) LookupName(n string) (string, bool) {
	code, ok := r.nameToCode[n]
	return code, ok
}
